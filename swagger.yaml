swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
parameters:
    offsetParam:  # <-- Arbitrary name for the definition that will be used to refer to it.
      in: query
      name: offset
      required: false
      type: integer
      minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      type: integer
      minimum: 1
      maximum: 50
      default: 30
      description: The numbers of items to return.
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
      get:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: User transactions API
        description: API for get transactions 
        parameters:
          - in: query
            name: userId
            type: number
            required: true
            description: Numeric ID of the user to get transaction
          - in: header
            type: integer
            name: Authorization
            description: Attach Bearer JWT token
            required: true
          - $ref: '#/parameters/offsetParam'
          - $ref: '#/parameters/limitParam'
        produces:
          - application/json
        responses:
          '200':
            description: Transactions retrieved successully
            schema:
              type: object
              properties:
                total: { type: number }
                page: { type: number }
                per_page: { type: number }
                has_next: { type: boolean }
                has_prev: { type: boolean }
                results: 
                  type: array
                  items:
                    $ref: '#/definitions/TransactionsResponse'
          '400':
            description: Invalid Fields
          '401':
            description: Unauthorized token
          '403':
            description: Forbidden
          '500':
            description: Internal Server Error
  /transactions/{transactionId}:
      get:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: User transaction details API
        description: API to get transactions details
        parameters:
          - in: path
            name: transactionId
            type: number
            required: true
            description: Numeric ID of the transaction to get a transaction
          - in: header
            type: number
            name: Authorization
            description: Attach Bearer JWT token
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: Transaction retrieved successully
            schema:
              $ref: '#/definitions/TransactionsResponse'
          '400':
            description: Invalid Fields
          '401':
            description: Unauthorized token
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '500':
            description: Internal Server Error
      put:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: User transaction details API
        description: API to get transactions details
        parameters:
          - in: path
            name: transactionId
            type: number
            required: true
            description: Numeric ID of the transaction to get a transaction
          - in: header
            type: number
            name: Authorization
            description: Attach Bearer JWT token
            required: true
          - in: body
            name: Request Body
            description: Update an existent user in the store
            required: true
            schema:
              $ref: '#/definitions/TransactionsResponse'
        produces:
          - application/json
        responses:
          '200':
            description: Transaction retrieved successully
            schema:
              $ref: '#/definitions/TransactionsResponse'
          '400':
            description: Invalid Fields
          '401':
            description: Unauthorized token
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '500':
            description: Internal Server Error
      delete:
        security:
          - Bearer: []
        tags:
          - Transactions
        summary: User transaction details API
        description: API to delete transactions details
        parameters:
          - in: path
            name: transactionId
            type: number
            required: true
            description: Numeric ID of the transaction to get a transaction
          - in: header
            type: number
            name: Authorization
            description: Attach Bearer JWT token
            required: true
        produces:
          - application/json
        responses:
          '200':
            description: Transaction was deleted successfully
          '400':
            description: Invalid Fields
          '401':
            description: Unauthorized token
          '403':
            description: Forbidden
          '404':
            description: Not Found
          '500':
            description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionsResponse:
    type: object
    properties:
      id:
        type: string
      date: 
        type: string
      label: 
        type: string
      amount: 
        type: number
      balance: 
        type: number
      category: 
        type: string
      notes: 
        type: string
      transaction type:
        type: string